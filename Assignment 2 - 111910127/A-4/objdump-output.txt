1) objdump -l -d -r A-4.o :
----------------------------------------------------------------

A-4.o:     file format pe-i386


Disassembly of section .text:

00000000 <_main>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 e4 f0             	and    $0xfffffff0,%esp
   6:	83 ec 20             	sub    $0x20,%esp
   9:	e8 00 00 00 00       	call   e <_main+0xe>
			a: DISP32	___main
   e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
  15:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
  1c:	00 
  1d:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
  24:	00 
  25:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
  2c:	00 
  2d:	eb 14                	jmp    43 <_main+0x43>
  2f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
  33:	8b 14 84             	mov    (%esp,%eax,4),%edx
  36:	8b 44 24 1c          	mov    0x1c(%esp),%eax
  3a:	89 54 84 0c          	mov    %edx,0xc(%esp,%eax,4)
  3e:	83 44 24 1c 01       	addl   $0x1,0x1c(%esp)
  43:	83 7c 24 1c 02       	cmpl   $0x2,0x1c(%esp)
  48:	7e e5                	jle    2f <_main+0x2f>
  4a:	8d 44 24 0c          	lea    0xc(%esp),%eax
  4e:	89 44 24 18          	mov    %eax,0x18(%esp)
  52:	8b 44 24 18          	mov    0x18(%esp),%eax
  56:	83 c0 08             	add    $0x8,%eax
  59:	c7 00 05 00 00 00    	movl   $0x5,(%eax)
  5f:	b8 00 00 00 00       	mov    $0x0,%eax
  64:	c9                   	leave  
  65:	c3                   	ret    
  66:	90                   	nop
  67:	90                   	nop
=============================================================

2) objdump --prefix-addresses -l -d -r A-4.o
--------------------------------------------------------------

A-4.o:     file format pe-i386


Disassembly of section .text:
00000000 <_main> push   %ebp
00000001 <_main+0x1> mov    %esp,%ebp
00000003 <_main+0x3> and    $0xfffffff0,%esp
00000006 <_main+0x6> sub    $0x20,%esp
00000009 <_main+0x9> call   0000000e <_main+0xe>
			a: DISP32	___main
0000000e <_main+0xe> movl   $0x1,(%esp)
00000015 <_main+0x15> movl   $0x2,0x4(%esp)
0000001d <_main+0x1d> movl   $0x3,0x8(%esp)
00000025 <_main+0x25> movl   $0x0,0x1c(%esp)
0000002d <_main+0x2d> jmp    00000043 <_main+0x43>
0000002f <_main+0x2f> mov    0x1c(%esp),%eax
00000033 <_main+0x33> mov    (%esp,%eax,4),%edx
00000036 <_main+0x36> mov    0x1c(%esp),%eax
0000003a <_main+0x3a> mov    %edx,0xc(%esp,%eax,4)
0000003e <_main+0x3e> addl   $0x1,0x1c(%esp)
00000043 <_main+0x43> cmpl   $0x2,0x1c(%esp)
00000048 <_main+0x48> jle    0000002f <_main+0x2f>
0000004a <_main+0x4a> lea    0xc(%esp),%eax
0000004e <_main+0x4e> mov    %eax,0x18(%esp)
00000052 <_main+0x52> mov    0x18(%esp),%eax
00000056 <_main+0x56> add    $0x8,%eax
00000059 <_main+0x59> movl   $0x5,(%eax)
0000005f <_main+0x5f> mov    $0x0,%eax
00000064 <_main+0x64> leave  
00000065 <_main+0x65> ret    
00000066 <_main+0x66> nop
00000067 <_main+0x67> nop
=============================================================
