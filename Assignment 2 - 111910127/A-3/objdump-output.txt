1) objdump -l -d -r A-3.o :
-------------------------------------------------------------

A-3.o:     file format pe-i386


Disassembly of section .text:

00000000 <_main>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 e4 f0             	and    $0xfffffff0,%esp
   6:	83 ec 10             	sub    $0x10,%esp
   9:	e8 00 00 00 00       	call   e <_main+0xe>
			a: DISP32	___main
   e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
  15:	00 
  16:	eb 04                	jmp    1c <_main+0x1c>
  18:	d1 64 24 0c          	shll   0xc(%esp)
  1c:	83 7c 24 0c 63       	cmpl   $0x63,0xc(%esp)
  21:	7e f5                	jle    18 <_main+0x18>
  23:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
  2a:	00 
  2b:	eb 28                	jmp    55 <_main+0x55>
  2d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
  34:	00 
  35:	eb 12                	jmp    49 <_main+0x49>
  37:	8b 44 24 08          	mov    0x8(%esp),%eax
  3b:	0f af 44 24 04       	imul   0x4(%esp),%eax
  40:	01 44 24 0c          	add    %eax,0xc(%esp)
  44:	83 44 24 04 01       	addl   $0x1,0x4(%esp)
  49:	83 7c 24 04 31       	cmpl   $0x31,0x4(%esp)
  4e:	7e e7                	jle    37 <_main+0x37>
  50:	83 44 24 08 01       	addl   $0x1,0x8(%esp)
  55:	83 7c 24 08 18       	cmpl   $0x18,0x8(%esp)
  5a:	7e d1                	jle    2d <_main+0x2d>
  5c:	b8 00 00 00 00       	mov    $0x0,%eax
  61:	c9                   	leave  
  62:	c3                   	ret    
  63:	90                   	nop
===========================================================

2) objdump --prefix-addresses -l -d -r A-3.o
-----------------------------------------------------------

A-3.o:     file format pe-i386


Disassembly of section .text:
00000000 <_main> push   %ebp
00000001 <_main+0x1> mov    %esp,%ebp
00000003 <_main+0x3> and    $0xfffffff0,%esp
00000006 <_main+0x6> sub    $0x10,%esp
00000009 <_main+0x9> call   0000000e <_main+0xe>
			a: DISP32	___main
0000000e <_main+0xe> movl   $0x0,0xc(%esp)
00000016 <_main+0x16> jmp    0000001c <_main+0x1c>
00000018 <_main+0x18> shll   0xc(%esp)
0000001c <_main+0x1c> cmpl   $0x63,0xc(%esp)
00000021 <_main+0x21> jle    00000018 <_main+0x18>
00000023 <_main+0x23> movl   $0x0,0x8(%esp)
0000002b <_main+0x2b> jmp    00000055 <_main+0x55>
0000002d <_main+0x2d> movl   $0x0,0x4(%esp)
00000035 <_main+0x35> jmp    00000049 <_main+0x49>
00000037 <_main+0x37> mov    0x8(%esp),%eax
0000003b <_main+0x3b> imul   0x4(%esp),%eax
00000040 <_main+0x40> add    %eax,0xc(%esp)
00000044 <_main+0x44> addl   $0x1,0x4(%esp)
00000049 <_main+0x49> cmpl   $0x31,0x4(%esp)
0000004e <_main+0x4e> jle    00000037 <_main+0x37>
00000050 <_main+0x50> addl   $0x1,0x8(%esp)
00000055 <_main+0x55> cmpl   $0x18,0x8(%esp)
0000005a <_main+0x5a> jle    0000002d <_main+0x2d>
0000005c <_main+0x5c> mov    $0x0,%eax
00000061 <_main+0x61> leave  
00000062 <_main+0x62> ret    
00000063 <_main+0x63> nop
===========================================================
